{"version":3,"sources":["components/Movie.js","components/Header.js","components/Footer.js","components/SlideShow.js","components/Movies.js","App.js","index.js"],"names":["Movie","props","data","title","poster_path","overview","vote_average","className","src","alt","Navbar","setTotalPages","setMovies","FEATURED","setHomePage","setIsfiltered","setIsSearching","search","setSearch","setTopRated","React","useState","genres","setGenres","handleNavClick","e","clicked","target","innerHTML","clickedGenre","dataset","id","fetch","then","response","json","results","filtered","filter","total_pages","useEffect","length","movieMenu","SetMovieMenu","onClick","map","genre","name","type","value","onChange","placeholder","Footer","totalPages","homePage","isFiltered","isSearching","topRated","nextLabel","onPageChange","page","selected","console","log","TOP_RATED","slice","pageRangeDisplayed","marginPagesDisplayed","pageCount","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","forcePage","SlideShow","setCurrentTitle","setCurrentDesc","images","titles","descriptions","slideImages","setSlideImages","image","push","original","backdrop_path","original_title","items","showNav","showFullscreenButton","showPlayButton","showBullets","autoPlay","slideInterval","onSlide","Movies","movies","currentTitle","currentDesc","movie","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7463c326.chunk.js","sourcesContent":["export default function Movie (props) {\r\n\r\n    const IMAGE = \"https://image.tmdb.org/t/p/w500/\"\r\n    const {title,poster_path,overview,vote_average} = props.data\r\n\r\n    return(\r\n        <div className=\"movie group\">\r\n            <div className=\" overflow-hidden relative\">\r\n            {poster_path ?  <img className = \"w-full h-96 w-80 rounded-t-sm\"src={IMAGE + poster_path} alt={title} /> :  <img className = \"h-96 w-80 rounded-t-sm\"src='./404.png' alt={title} />}\r\n            <div className=\"movie-overview content-center text-white absolute inset-x-0 bottom-0 p-2 min-h-full max-h-full overflow-auto transform-gpu translate-y-full backdrop-filter backdrop-blur transition duration-300 ease-in-out group-hover:transform-gpu translate-y\">\r\n                <h2>Overview</h2>\r\n                <p>{overview}</p>\r\n            </div>\r\n            </div>\r\n            <div className=\"movie-info flex fd-col justify-between items-center rounded-b-sm p-2 pr-4 h-16 bg-secondary shadow-2xl\">\r\n                <h3 className=\"w-48 break-words text-white overflow-hidden\">{title}</h3>\r\n                <p className=\"text-rating\">{vote_average===0? 'Unrated' : vote_average}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'    //theme\r\nimport 'primereact/resources/primereact.min.css'                    //core css\r\nimport 'primeicons/primeicons.css'                                  //icons\r\n\r\nconst SEARCH = \"https://api.themoviedb.org/3/search/movie?api_key=cce5c51828e87448e801e6201147706e&query=\"\r\n\r\nconst GENRES = \"https://api.themoviedb.org/3/genre/movie/list?api_key=cce5c51828e87448e801e6201147706e&language=en-US\"\r\n\r\nconst FILTERED = \"https://api.themoviedb.org/3/discover/movie?api_key=cce5c51828e87448e801e6201147706e&language=en-US&sort_by=popularity.desc&with_genres=\"\r\n\r\nconst TOP_RATED = \"https://api.themoviedb.org/3/movie/top_rated?api_key=cce5c51828e87448e801e6201147706e&language=en-US\"\r\n\r\nexport default function Navbar({setTotalPages, setMovies, FEATURED, setHomePage, setIsfiltered, setIsSearching, search, setSearch, setTopRated}) {\r\n\r\n    const [genres,setGenres] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        fetch(GENRES)\r\n            .then (response => response.json())\r\n            .then((data)=>{\r\n                setGenres(data.genres)\r\n        })        \r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        if (search ===''){\r\n            fetch(FEATURED)\r\n            .then (response => response.json())\r\n            .then((data)=>{\r\n                setMovies(data.results)\r\n                setTotalPages(data.total_pages)\r\n                setIsfiltered ({filtered : false, filter : ''})\r\n                setIsSearching(false)\r\n            \r\n        })}\r\n        else {\r\n            setTopRated(false)\r\n            setIsSearching(true)\r\n            fetch(SEARCH+search)\r\n            .then (response => response.json())\r\n            .then(data=>{\r\n                if (data.results.length === 0){\r\n                  setMovies('')\r\n                  setTotalPages(data.total_pages)    \r\n                } else {\r\n                setTotalPages(data.total_pages)    \r\n                setMovies(data.results)}})\r\n                setIsfiltered ({filtered : false, filter : ''})\r\n        }\r\n        \r\n    }, [search])\r\n\r\n    function handleNavClick(e){\r\n        let clicked = e.target.innerHTML\r\n        let clickedGenre = e.target.dataset.id\r\n        switch (clicked) {\r\n            case 'Home':\r\n                setTopRated(false)\r\n                fetch(FEATURED)\r\n                .then (response => response.json())\r\n                .then((data)=>{\r\n                    setHomePage(0)\r\n                    setMovies(data.results)\r\n                    setSearch('')\r\n                    setIsfiltered ({filtered : false,\r\n                        filter : ''})\r\n                   })\r\n                break;\r\n            case 'Top IMDb':\r\n                setTopRated(true)\r\n                fetch(TOP_RATED)\r\n                .then (response => response.json())\r\n                .then((data)=>{\r\n                    setHomePage(0)\r\n                    setMovies(data.results)\r\n                    setSearch('')\r\n                    setTotalPages(data.total_pages)\r\n                    setIsfiltered ({filtered : false,\r\n                        filter : ''})\r\n                   })\r\n            break;\r\n            default:\r\n                setTopRated(false)\r\n                setIsfiltered ({filtered : true,\r\n                              filter : clickedGenre})\r\n                fetch(FILTERED + clickedGenre)\r\n                .then (response => response.json())\r\n                .then((data)=>{\r\n                    setMovies(data.results)\r\n                    setTotalPages(data.total_pages)\r\n                })  \r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    function searchChangeHandler(e) {\r\n        setSearch(e.target.value)      \r\n      }\r\n\r\n\r\n    const [movieMenu,SetMovieMenu] = React.useState(false)\r\n    function toggleMenu(){\r\n        SetMovieMenu(!movieMenu)\r\n    }\r\n\r\n    \r\n    return (\r\n        <header className=\"flex justify-center lg:justify-between fixed top-0 w-full z-50 items-center bg-secondary h-14\">\r\n            <div className=\"flex items-center\">\r\n                <img className=\"lg:ml-0 xl:ml-48 w-20 rounded-xl\" src=\"./logo.png\" alt=\"logo\" />\r\n               <ul className=\"flex text-white\">\r\n                   <li className=\"header\" onClick={handleNavClick}>Home</li>\r\n                   <li className=\"header flex flex-col relative\" onClick={toggleMenu}>Genre\r\n                        {movieMenu &&\r\n                        <ul className=\"text-white p-4 rounded-md bg-gray-800 drop-shadow-lg w-max absolute z-50 grid gap-2 lg:grid-cols-3 md:grid-cols-2 top-10 ml-0\">\r\n                            {genres.map((genre)=>{return(\r\n                                <li className=\"z-50\" onClick={handleNavClick} data-id={genre.id} key={genre.id}>{genre.name}</li>)}\r\n                            )}\r\n                        </ul>     }       \r\n                   </li>\r\n                   <li className=\"header\" onClick={handleNavClick}>Top IMDb</li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"search sm:pr-8 xl:mr-44 \">\r\n                <span className=\"p-input-icon-right\">\r\n                <i className=\"pi pi-search\" />   \r\n                <input type=\"text\" className=\"bg-transparent mr-10 text-white focus:outline-none border-b border-white\" value={search} onChange={searchChangeHandler } placeholder=\"Search...\" />     \r\n                </span>\r\n            </div>    \r\n        </header>\r\n    )\r\n}","import ReactPaginate from 'react-paginate';\r\nimport '../index.css'\r\n\r\nconst FILTERED = \"https://api.themoviedb.org/3/discover/movie?api_key=cce5c51828e87448e801e6201147706e&language=en-US&sort_by=popularity.desc&page=\"\r\nconst SEARCH = \"https://api.themoviedb.org/3/search/movie?api_key=cce5c51828e87448e801e6201147706e&query=\"\r\nconst TOP_RATED = \"https://api.themoviedb.org/3/movie/top_rated?api_key=cce5c51828e87448e801e6201147706e&language=en-US\"\r\n\r\nexport default function Footer ({totalPages, setMovies,FEATURED, homePage, setHomePage,isFiltered, isSearching, search, topRated}){\r\n\r\n    function handlePageClick(data) {\r\n        let page  = data.selected + 1\r\n\r\n        console.log(isFiltered.filtered)\r\n        console.log(isSearching)\r\n        if (isFiltered.filtered === true) {\r\n            setHomePage((page-1))\r\n            fetch(FILTERED + page + '&with_genres=' + isFiltered.filter)\r\n            .then (response => response.json())\r\n            .then(data=>setMovies(data.results)) \r\n        }        \r\n        else if (isSearching) {\r\n            setHomePage((page-1))\r\n            fetch(SEARCH + search + '&page=' + page)\r\n            .then (response => response.json())\r\n            .then(data=>setMovies(data.results))\r\n        }\r\n        else if (topRated) {\r\n            setHomePage((page-1))\r\n            fetch(TOP_RATED + '&page=' + page)\r\n            .then (response => response.json())\r\n            .then(data=>setMovies(data.results))\r\n        }\r\n        else{\r\n            setHomePage((page-1))\r\n            fetch(FEATURED.slice(0, -1) + page)\r\n            .then (response => response.json())\r\n            .then(data=>setMovies(data.results)) }\r\n    }\r\n\r\n    return(\r\n    <footer className=\"top-pagination flex justify-center items-center bg-secondary h-12\">\r\n        <ReactPaginate\r\n            nextLabel=\"next >\"\r\n            onPageChange={handlePageClick}\r\n            pageRangeDisplayed={10}\r\n            marginPagesDisplayed={2}\r\n            pageCount={totalPages}\r\n            previousLabel=\"< previous\"\r\n            pageClassName=\"page-item\"\r\n            pageLinkClassName=\"page-link\"\r\n            previousClassName=\"page-item\"\r\n            previousLinkClassName=\"page-link\"\r\n            nextClassName=\"page-item\"\r\n            nextLinkClassName=\"page-link\"\r\n            breakLabel=\"...\"\r\n            breakClassName=\"page-item\"\r\n            breakLinkClassName=\"page-link\"\r\n            containerClassName=\"pagination\"\r\n            activeClassName=\"active\"\r\n            renderOnZeroPageCount={null}\r\n            forcePage = {homePage}\r\n        />\r\n        </footer>\r\n\r\n    )}","import ImageGallery from 'react-image-gallery'\r\nimport React from 'react'\r\nconst NOW_PLAYING = \"https://api.themoviedb.org/3/movie/now_playing?api_key=cce5c51828e87448e801e6201147706e&language=en-US&page=1\"\r\nconst IMAGE = \"https://image.tmdb.org/t/p/original/\"\r\nexport default function SlideShow ({setCurrentTitle, setCurrentDesc}) {\r\n    \r\n    let images = []\r\n    let titles = []\r\n    let descriptions = []\r\n\r\n    const [slideImages, setSlideImages] = React.useState([])\r\n    React.useEffect(() => {\r\n        fetch(NOW_PLAYING)\r\n        .then (response => response.json())\r\n        .then((data)=>{\r\n            setSlideImages(data.results)})\r\n    }, [])\r\n\r\n   \r\n    slideImages.map((image)=>{\r\n        images.push({original: IMAGE+image.backdrop_path})\r\n        titles.push(image.original_title)\r\n        descriptions.push(image.overview)\r\n    })\r\n\r\n    function zbi(e){\r\n        setCurrentTitle(titles[e])\r\n        setCurrentDesc(descriptions[e])\r\n    }\r\n    return (\r\n        <ImageGallery \r\n        items={images}\r\n        showNav={false}\r\n        showFullscreenButton={false}\r\n        showPlayButton={false}\r\n        showBullets={true}\r\n        autoPlay={true}\r\n        slideInterval={4500}\r\n        onSlide={zbi}\r\n    />\r\n    )\r\n}","import Movie from \"./Movie\";\r\nimport Navbar from './Header';\r\nimport Footer from './Footer'\r\nimport React from 'react'\r\nimport SlideShow from \"./SlideShow\";\r\n\r\nconst FEATURED = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=cce5c51828e87448e801e6201147706e&page=1\"\r\n\r\nexport default function Movies () {\r\n\r\nconst [movies,setMovies] =  React.useState([])\r\nconst [totalPages,setTotalPages] = React.useState('')\r\nconst [homePage, setHomePage] = React.useState(0)\r\nconst [isFiltered, setIsfiltered] = React.useState({filtered : false, filter : ''})\r\nconst [isSearching, setIsSearching] = React.useState(false)\r\nconst [search,setSearch] = React.useState('')\r\nconst [topRated, setTopRated] = React.useState(false)\r\n\r\n  React.useEffect(()=>{\r\n    fetch(FEATURED)\r\n    .then (response => response.json())\r\n    .then(data=>{\r\n      setTotalPages(data.total_pages)\r\n      setMovies(data.results)})  \r\n  }\r\n    ,[])\r\n\r\n    const [currentTitle, setCurrentTitle] = React.useState('')\r\n    const [currentDesc, setCurrentDesc] = React.useState('')\r\n\r\n   \r\n\r\n    return (\r\n      <>\r\n      <Navbar setTotalPages = {setTotalPages} setMovies={setMovies} FEATURED={FEATURED} setHomePage={setHomePage} isFiltered={isFiltered} setIsfiltered={setIsfiltered} setIsSearching={setIsSearching} search={search} setSearch={setSearch} setTopRated={setTopRated}/>\r\n      <h1 className=\"text-white text-3xl xl:w-1/2 lg:w-4/5 m-auto mt-4\">In Theatre</h1>\r\n      <div className=\"lg:w-full xl:w-1/2 m-auto relative\">\r\n      {!isSearching && <SlideShow setCurrentTitle={setCurrentTitle} setCurrentDesc={setCurrentDesc}/>}\r\n      <div className=\"shadow-img absolute bottom-0 p-4 left-0\">\r\n      <h1 className=\"description text-white mb-2\">{currentTitle}</h1>\r\n      <p className=\"description text-xs sm:text-sm md:text-base lg:-text-lg text-white w-3/5 mb-6\">{currentDesc}</p>\r\n      </div>\r\n      </div>\r\n      <Footer totalPages={totalPages} setMovies={setMovies} FEATURED={FEATURED} homePage={homePage} setHomePage={setHomePage} isFiltered={isFiltered} isSearching={isSearching} search={search} topRated={topRated} />\r\n        <div className=\"movies grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 2xl:grid-cols-5 gap-6 p-6 lg:w-full xl:w-4/5 m-auto\">\r\n        {movies ? movies.map((movie)=>\r\n          <Movie key={movie.id} data={movie}/>\r\n        ):  <h1 className=\"text-3xl text-white min-h-screen mt-48\">Not Found...</h1>}\r\n      </div>\r\n      <Footer totalPages={totalPages} setMovies={setMovies} FEATURED={FEATURED} homePage={homePage} setHomePage={setHomePage} isFiltered={isFiltered} isSearching={isSearching} search={search} topRated={topRated} />\r\n      </>\r\n    \r\n     \r\n    )\r\n}","import Movies from \"./components/Movies\";\nimport \"@fontsource/poppins\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App bg-primary min-h-screen\">\n    <Movies />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}